name: omise-go code-coverage

on:
  push:

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      WORKDIR: src/github.com/${{ github.repository }}

    strategy:
      matrix:
        go: [ '1.21', '1.20', '1.19', '1.18', '1.17' ]
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.WORKDIR }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          working-directory: ${{ env.WORKDIR }}

      - name: Build
        working-directory: ${{ env.WORKDIR }}
        run: .github/scripts/setup.sh

      - name: Generate coverage
        working-directory: ${{ env.WORKDIR }}
        env:
          OMISE_PKEY: pkey_test_xxx
          OMISE_SKEY: skey_test_xxx
        run: .github/scripts/code-coverage.sh

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ${{ env.WORKDIR }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
