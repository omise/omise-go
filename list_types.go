/* !!! DO NOT MODIFY !!!
 *
 * This file is auto-generated by internal/generator package.
 */

package omise

// AccountList represents the list structure returned by Omise's REST API that contains
// Account struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type AccountList struct {
	List
	Data []*Account `json:"data"`
}

// Find finds and returns Account with the given id. Returns nil if not found.
func (list *AccountList) Find(id string) *Account {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// BalanceList represents the list structure returned by Omise's REST API that contains
// Balance struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type BalanceList struct {
	List
	Data []*Balance `json:"data"`
}

// Find finds and returns Balance with the given id. Returns nil if not found.
func (list *BalanceList) Find(id string) *Balance {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// BankAccountList represents the list structure returned by Omise's REST API that contains
// BankAccount struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type BankAccountList struct {
	List
	Data []*BankAccount `json:"data"`
}

// Find finds and returns BankAccount with the given id. Returns nil if not found.
func (list *BankAccountList) Find(id string) *BankAccount {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// BankAccountJPList represents the list structure returned by Omise's REST API that contains
// BankAccountJP struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type BankAccountJPList struct {
	List
	Data []*BankAccountJP `json:"data"`
}

// Find finds and returns BankAccountJP with the given id. Returns nil if not found.
func (list *BankAccountJPList) Find(id string) *BankAccountJP {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// CardList represents the list structure returned by Omise's REST API that contains
// Card struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type CardList struct {
	List
	Data []*Card `json:"data"`
}

// Find finds and returns Card with the given id. Returns nil if not found.
func (list *CardList) Find(id string) *Card {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// ChargeList represents the list structure returned by Omise's REST API that contains
// Charge struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type ChargeList struct {
	List
	Data []*Charge `json:"data"`
}

// Find finds and returns Charge with the given id. Returns nil if not found.
func (list *ChargeList) Find(id string) *Charge {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// CustomerList represents the list structure returned by Omise's REST API that contains
// Customer struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type CustomerList struct {
	List
	Data []*Customer `json:"data"`
}

// Find finds and returns Customer with the given id. Returns nil if not found.
func (list *CustomerList) Find(id string) *Customer {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// DeletionList represents the list structure returned by Omise's REST API that contains
// Deletion struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type DeletionList struct {
	List
	Data []*Deletion `json:"data"`
}

// Find finds and returns Deletion with the given id. Returns nil if not found.
func (list *DeletionList) Find(id string) *Deletion {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// DisputeList represents the list structure returned by Omise's REST API that contains
// Dispute struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type DisputeList struct {
	List
	Data []*Dispute `json:"data"`
}

// Find finds and returns Dispute with the given id. Returns nil if not found.
func (list *DisputeList) Find(id string) *Dispute {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// DocumentList represents the list structure returned by Omise's REST API that contains
// Document struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type DocumentList struct {
	List
	Data []*Document `json:"data"`
}

// Find finds and returns Document with the given id. Returns nil if not found.
func (list *DocumentList) Find(id string) *Document {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// EventList represents the list structure returned by Omise's REST API that contains
// Event struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type EventList struct {
	List
	Data []*Event `json:"data"`
}

// Find finds and returns Event with the given id. Returns nil if not found.
func (list *EventList) Find(id string) *Event {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// LinkList represents the list structure returned by Omise's REST API that contains
// Link struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type LinkList struct {
	List
	Data []*Link `json:"data"`
}

// Find finds and returns Link with the given id. Returns nil if not found.
func (list *LinkList) Find(id string) *Link {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// OccurrenceList represents the list structure returned by Omise's REST API that contains
// Occurrence struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type OccurrenceList struct {
	List
	Data []*Occurrence `json:"data"`
}

// Find finds and returns Occurrence with the given id. Returns nil if not found.
func (list *OccurrenceList) Find(id string) *Occurrence {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// RecipientList represents the list structure returned by Omise's REST API that contains
// Recipient struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type RecipientList struct {
	List
	Data []*Recipient `json:"data"`
}

// Find finds and returns Recipient with the given id. Returns nil if not found.
func (list *RecipientList) Find(id string) *Recipient {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// RefundList represents the list structure returned by Omise's REST API that contains
// Refund struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type RefundList struct {
	List
	Data []*Refund `json:"data"`
}

// Find finds and returns Refund with the given id. Returns nil if not found.
func (list *RefundList) Find(id string) *Refund {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// ScheduleList represents the list structure returned by Omise's REST API that contains
// Schedule struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type ScheduleList struct {
	List
	Data []*Schedule `json:"data"`
}

// Find finds and returns Schedule with the given id. Returns nil if not found.
func (list *ScheduleList) Find(id string) *Schedule {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// TokenList represents the list structure returned by Omise's REST API that contains
// Token struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type TokenList struct {
	List
	Data []*Token `json:"data"`
}

// Find finds and returns Token with the given id. Returns nil if not found.
func (list *TokenList) Find(id string) *Token {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// TransactionList represents the list structure returned by Omise's REST API that contains
// Transaction struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type TransactionList struct {
	List
	Data []*Transaction `json:"data"`
}

// Find finds and returns Transaction with the given id. Returns nil if not found.
func (list *TransactionList) Find(id string) *Transaction {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}

// TransferList represents the list structure returned by Omise's REST API that contains
// Transfer struct as member elements. See the pagination and lists documentation at
// https://www.omise.co/api-pagination for more information.
type TransferList struct {
	List
	Data []*Transfer `json:"data"`
}

// Find finds and returns Transfer with the given id. Returns nil if not found.
func (list *TransferList) Find(id string) *Transfer {
	for _, item := range list.Data {
		if item.ID == id {
			return item
		}
	}

	return nil
}
